{"file_contents":{"index.js":{"content":"const express = require(\"express\");\nconst { execFile } = require(\"child_process\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst app = express();\nconst port = 3000;\n\napp.use(express.json());\n\napp.post(\"/synthesize\", (req, res) => {\n    const text = req.body.text;\n    if (!text) {\n        return res.status(400).send(\"Text is required.\");\n    }\n\n    const outputFilePath = path.join(__dirname, \"output.wav\");\n    // Make sure these paths are correct for your uploaded files!\n    const piperPath = \"./piper_total/piper\"; // Or the name of your uploaded binary file\n    const modelPath = \"./piper_total/en_US-lessac-medium.onnx\"; // Or the name of your uploaded model\n\n    const commandArgs = [\n        \"-m\",\n        modelPath,\n        \"-f\",\n        outputFilePath,\n        \"--sentence-silence-seconds\",\n        \"0.5\", // Optional: adds a pause between sentences\n    ];\n\n    // This is important for piping the text into Piper\n    const child = execFile(piperPath, commandArgs, (error, stdout, stderr) => {\n        if (error) {\n            console.error(`Error executing Piper: ${stderr}`);\n            return res.status(500).send(\"TTS synthesis failed.\");\n        }\n\n        res.sendFile(outputFilePath, (err) => {\n            if (err) {\n                console.error(\"Error sending file:\", err);\n            }\n            fs.unlink(outputFilePath, (unlinkErr) => {\n                if (unlinkErr)\n                    console.error(\"Error deleting temp file:\", unlinkErr);\n            });\n        });\n    });\n\n    // Write the text to the Piper process's stdin\n    child.stdin.write(text + \"\\n\");\n    child.stdin.end();\n});\n\napp.listen(port, () => {\n    console.log(`TTS API listening at http://localhost:${port}`);\n});\n","size_bytes":1735}},"version":1}